extends Node2D

# useful for demo
#https://chat.openai.com/c/e3e218c3-d9ee-40fa-9fac-93cce48b936f
#https://chat.openai.com/c/29d08dfa-dab4-4b86-bce4-5ca259fc728f
#https://chat.openai.com/c/dd0866e0-cbdd-4360-80b6-90b5244d150e


# Called when the node enters the scene tree for the first time.
func _ready():
# GPT-4 with vision
	Global.SYSTEM = """# Country Guessing Game

## Game Objective
Engage in a game where the user must identify countries based on unique clues provided by the GPT-4 Vision API.

## Instructions

1. **Initiate the Game**: The system thinks of a country.
2. **Provide a Clue**: The system offers a clue that distinctly identifies one country only, using insights generated by the Vision API.
3. **User Action**: The user indicates to their guessed country on a world map using a red token.
4. **Map Colors**: The map features countries and continents in white against grey seas, providing high contrast to assist the Vision API in accurately determining where the red token is placed.
5. **Verification**: The system focuses on the location of the red token to verify the guess. The Vision API observes the position of the red token; the system ensures it aligns with the intended country. Avoid assumptions; verification must be thorough.
6. **Warning**: The red token is the primary indicator of the pointing location. The system ensures that the token is clearly visible and accurately placed on the intended country as interpreted by the Vision API.
7. **Response**: The system provides the correct answer regardless of user accuracy, utilizing the Vision API's assessment, and then proceeds to the next country.
8. **Continue the Game**: The system continues with successive rounds using the same format, consistently relying on the Vision API for accuracy.
9. **Image examples**: All the first six 'assistant' messages of the discussion are an example of the user token on a country.
	1. First image has the red token on Argentina
	2. Second image has the red token on Australia
	3. Third image has the red token on China
	4. Fourth image has the red token on France
	5. Fifth image has the red token on South Africa
	6. Sixth image has the red token on USA

## JSON Response Format
Use the following JSON structure to respond to user interactions:
```json
{"_text_":"Your response based on user interaction"}
```
*_text_* is mandatory"""
#
	Global.SYSTEM_IMAGE_URLS = [
		ProjectSettings.globalize_path("res://") + "argentina.png",
		ProjectSettings.globalize_path("res://") + "australia.png",
		ProjectSettings.globalize_path("res://") + "china.png",
		ProjectSettings.globalize_path("res://") + "france.png",
		ProjectSettings.globalize_path("res://") + "southafrica.png",
		ProjectSettings.globalize_path("res://") + "usa.png"]

	#Global.SYSTEM = """Let's play a game. Think of a country and give the user a clue.
#The clue must be specific enough that there is only one correct country.
#User will try pointing at the country on a map. Look closely at the position of the user finger on the map and tell him if he was roughly pointing at the right place.
#Give the answer regardless, and then move to the next country to guess.
#You always respond using JSON using that template:
#{"_text_":"Your response as the interaction with the user input"}
#*_text_* is mandatory"""

# GPT-4 with text only
	#Global.SYSTEM = """Let's play a game. Think of a country and give the user a clue.
#The clue must be specific enough that there is only one correct country.
#User will answer, tell me if he was right.
#Give the answer regardless, and move to the next country to guess.
#You always respond using JSON using that template:
#{"_text_":"Your response as the interaction with the user input"}
#*_text_* is mandatory"""

# Llama3 with text only
	#Global.SYSTEM = """You are acting as the game master for a country guessing game.
#You always respond using JSON using that template:
#```{"_text_":"Your response as the interaction with the user input"}```
#*_text_* is mandatory
#
## Guidelines
#- The first time, you think of a country and give the user a clue.
#- The clue must be specific enough that there is only one correct country.
#- When user has given an answer, you tell him if he was right or wrong, and then continue with the next country to guess.
#- Complete the below interaction."""

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	pass
